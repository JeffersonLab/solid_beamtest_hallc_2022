//This file contains the Pedestal and pulse peak position for the highrate beamtest data
#ifndef _PedNPeak_h_
#define _PedNPeak_h_

#include <iostream>

using namespace std;
//////////////////////////////////////////////////////////////////////////
//global variables

extern double gPed7[16];
extern double gPed8[16];

//20230112-20230119 data set:  3954 <= runs <= 4022 
double kPed7_0112[16]={108.1, 104.7, 100.6, 101.8, 101.5,  98.6, 103.1,  96.2, 108.4, 102.7, 107.6, 111.3, 105.2, 103.0, 104.4,  99.9};  //20230112
double kPed8_0112[16]={117.0, 109.7, 121.1, 116.4, 103.9, 104.0, 107.5, 111.0, 110.5, 105.6, 105.2, 102.5, 106.0, 107.9, 113.1, 103.2};  //20230112

//20230120-20230123 data set:  4023 <= runs <= 4066 
double kPed7_0120[16]={106.7, 104.0,  99.3, 101.7, 101.3,  98.7, 103.8,  95.1, 109.3, 102.7, 107.5, 110.6, 105.4, 101.8, 103.5,  99.4};  //20230120
double kPed8_0120[16]={115.1, 110.7, 122.8, 118.7, 105.1, 105.0, 108.5, 107.2, 107.0, 102.1, 104.4, 100.7, 104.9, 107.7, 113.3, 103.3};  //20230120

//run 4085, 20230127, 4067 <= runs <= 4101  
double kPed7_0127[16]={107.0, 105.0, 100.1, 102.3, 101.7,  99.3, 103.9,  96.4, 110.1, 103.5, 108.5, 110.4, 105.6, 102.5, 104.2,  99.6};  //20230127
double kPed8_0127[16]={118.1, 110.0, 126.7, 128.3, 105.3, 105.6, 108.4, 108.3, 108.0, 105.8, 101.6, 104.4, 105.2, 108.3, 115.4, 104.1};  //20230127

//run 4112 20230201, 4102 <= runs <= 4126  
double kPed7_0201[16]={105.9, 101.6,  99.6, 100.4,  99.8,  98.1, 101.4,  94.5, 107.1, 100.3, 106.9, 108.0, 103.3, 100.9, 101.4,  98.7};  //20230201
double kPed8_0201[16]={107.4, 107.9, 105.1, 116.7, 103.0, 104.0, 106.8, 106.7, 106.2, 101.8, 100.0, 102.5, 103.3, 107.1, 108.3, 101.9};  //20230201

//run 4133 20230208, 4127 <= runs <= 4140
double kPed7_0208[16]={106.5, 101.1,  99.5, 100.7,  99.9,  98.2, 101.3,  94.9, 107.2, 100.4, 106.6, 107.4, 103.6, 101.3, 102.2,  98.1};  //20230208
double kPed8_0208[16]={106.3, 108.3, 103.2, 118.3, 103.3, 103.3, 106.6, 106.8, 106.0, 102.2, 100.0, 101.9, 102.8, 107.6, 108.0, 101.9};  //20230208

//run 4141 20230210, 4141 <= runs <= 4171 
double kPed7_0210[16]={105.8, 101.6,  98.8, 100.5, 100.0,  97.9, 101.6,  92.1, 107.8, 100.4, 107.1, 108.2, 104.0, 101.0, 101.8,  98.6};  //20230210
double kPed8_0210[16]={109.5, 108.4, 106.3, 118.9, 103.9, 103.9, 106.7, 107.1, 106.6, 100.8,  99.7, 102.1, 103.3, 107.1, 113.2, 102.3};  //20230210

//run 4191 20230214, 4172 <= runs <= 4216  
double kPed7_0214[16]={107.1, 102.9, 100.3, 101.6, 100.7, 98.5, 102.5, 94.4, 108.8, 101.6, 107.2, 108.8, 104.6, 101.8, 103.1, 99.2};  //20230214
double kPed8_0214[16]={112.2, 109.8, 114.9, 118.1, 104.6, 104.4, 107.4, 107.5, 107.3, 103.4, 101.0, 103.5, 104.5, 108.0, 114.9, 102.8};  //20230214
////////////////////////////////////////////////////////////////////////

// peak position for trig type 1-6, for runs 3944-4022 only (202301120-20230119 data set), bit 4,5,6 are not available
double kSlot7PeakPos_0112[6][16] = {
  { 41.5, 41.5, 41.5, 41.5, 41.5, 40.5, 40.5,  0.5, 41.5, 40.5, 40.5, 41.5, 41.5, 41.5, 41.5, 41.5 },
  { 39.5, 39.5, 39.5, 39.5, 39.5, 38.5, 38.5,  0.5, 39.5, 39.5, 38.5, 39.5, 39.5, 39.5, 39.5, 39.5 },  //middle of 2 peaks
  { 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5,  0.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5 },  //middle of 2 peaks
  { 44.5, 43.5, 44.5, 44.5, 43.5, 43.5, 43.5,  0.5, 44.5, 43.5, 43.5, 44.5, 43.5, 44.5, 44.5, 43.5 },
  { 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5,  0.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5 },
  { 44.5, 43.5, 44.5, 44.5, 43.5, 43.5, 43.5,  0.5, 44.5, 43.5, 43.5, 44.5, 43.5, 44.5, 44.5, 43.5 },
};
double kSlot8PeakPos_0112[6][16] = { 
  { 31.5, 26.5, 28.5, 29.5, 29.5, 28.5, 23.5, 26.5, 26.5, 26.5, 27.5, 27.5, 27.5, 28.5, 29.5, 70.5 },
  { 29.5, 24.5, 25.5, 26.5, 26.5, 26.5, 21.5, 23.5, 23.5, 23.5, 24.5, 24.5, 24.5, 25.5, 27.5, 70.5 },  //middle of 2 peaks
  { 30.5, 25.5, 26.5, 27.5, 27.5, 27.5, 22.5, 24.5, 24.5, 24.5, 25.5, 25.5, 25.5, 26.5, 28.5, 70.5 },  //middle of 2 peaks
  { 31.5, 26.5, 34.5, 29.5, 29.5, 28.5, 22.5, 26.5, 25.5, 26.5, 26.5, 27.5, 28.5, 30.5, 28.5, 77.5 },
  { 30.5, 25.5, 26.5, 27.5, 27.5, 27.5, 22.5, 24.5, 24.5, 24.5, 25.5, 25.5, 25.5, 26.5, 28.5, 70.5 },
  { 31.5, 26.5, 34.5, 29.5, 29.5, 28.5, 22.5, 26.5, 25.5, 26.5, 26.5, 27.5, 28.5, 30.5, 28.5, 77.5 }
};

// peak position for trig type 1-6, for runs 4023-4066 only (20230120-20230123 data set), bit 4,5,6 are not available
double kSlot7PeakPos_0120[6][16] = {
  { 41.5, 41.5, 41.5, 41.5, 41.5, 40.5, 40.5,  0.5, 41.5, 40.5, 40.5, 41.5, 41.5, 41.5, 41.5, 41.5 },
  { 36.5, 36.5, 36.5, 36.5, 36.5, 36.5, 35.5,  0.5, 36.5, 36.5, 36.5, 36.5, 36.5, 36.5, 36.5, 36.5 },
  { 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5,  0.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5 },
  { 44.5, 43.5, 44.5, 44.5, 43.5, 43.5, 43.5,  0.5, 44.5, 43.5, 43.5, 44.5, 43.5, 44.5, 44.5, 43.5 },
  { 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5,  0.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5 },
  { 44.5, 43.5, 44.5, 44.5, 43.5, 43.5, 43.5,  0.5, 44.5, 43.5, 43.5, 44.5, 43.5, 44.5, 44.5, 43.5 },
};
double kSlot8PeakPos_0120[6][16] = { 
  { 28.5, 23.5, 31.5, 26.5, 25.5, 25.5, 19.5, 23.5, 22.5, 23.5, 25.5, 25.5, 26.5, 27.5, 28.5, 77.5 },
  { 24.5, 18.5, 26.5, 21.5, 21.5, 21.5, 14.5, 18.5, 18.5, 19.5, 21.5, 21.5, 22.5, 22.5, 23.5, 77.5 },
  { 27.5, 22.5, 30.5, 25.5, 24.5, 24.5, 18.5, 22.5, 22.5, 22.5, 24.5, 24.5, 25.5, 27.5, 27.5, 77.5 },
  { 31.5, 26.5, 34.5, 29.5, 29.5, 28.5, 22.5, 26.5, 25.5, 26.5, 26.5, 27.5, 28.5, 30.5, 28.5, 77.5 },
  { 27.5, 22.5, 33.5, 25.5, 24.5, 24.5, 18.5, 25.5, 22.5, 22.5, 24.5, 24.5, 25.5, 26.5, 27.5, 77.5 },
  { 31.5, 26.5, 34.5, 29.5, 29.5, 28.5, 22.5, 26.5, 25.5, 26.5, 26.5, 27.5, 28.5, 30.5, 28.5, 77.5 }
};

// peak position for trig type 1-6, for runs 4067-4101 only (20230127 data set), bit 3,5,6 are not available
double kSlot7PeakPos_0127[6][16] = {
  { 50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 49.5,  0.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5 },
  { 46.5, 45.5, 46.5, 46.5, 45.5, 45.5, 45.5,  0.5, 45.5, 45.5, 45.5, 45.5, 46.5, 46.5, 46.5, 45.5 },
  { 47.5, 47.5, 47.5, 47.5, 47.5, 46.5, 46.5,  0.5, 47.5, 47.5, 46.5, 47.5, 47.5, 47.5, 47.5, 47.5 },
  { 44.5, 43.5, 44.5, 44.5, 43.5, 43.5, 43.5,  0.5, 44.5, 43.5, 43.5, 44.5, 43.5, 44.5, 44.5, 43.5 },
  { 44.5, 43.5, 44.5, 44.5, 43.5, 43.5, 43.5,  0.5, 44.5, 43.5, 43.5, 44.5, 43.5, 44.5, 44.5, 43.5 },
  { 44.5, 43.5, 44.5, 44.5, 43.5, 43.5, 43.5,  0.5, 44.5, 43.5, 43.5, 44.5, 43.5, 44.5, 44.5, 43.5 }
};
double kSlot8PeakPos_0127[6][16] = { 
  { 37.5, 32.5, 37.5, 35.5, 35.5, 34.5, 28.5, 35.5, 31.5, 33.5, 34.5, 33.5, 34.5, 34.5, 37.5, 98.5 },
  { 28.5, 28.5, 28.5, 31.5, 28.5, 28.5, 22.5, 27.5, 27.5, 27.5, 28.5, 28.5, 28.5, 30.5, 31.5, 98.5 }, //middle of 2 peaks
  { 28.5, 28.5, 28.5, 31.5, 28.5, 28.5, 22.5, 27.5, 27.5, 27.5, 28.5, 28.5, 28.5, 30.5, 31.5, 98.5 }, //middle of 2 peaks
  { 31.5, 26.5, 34.5, 29.5, 29.5, 28.5, 22.5, 26.5, 25.5, 26.5, 26.5, 27.5, 28.5, 30.5, 28.5, 77.5 },
  { 27.5, 22.5, 30.5, 25.5, 24.5, 24.5, 19.5, 25.5, 22.5, 22.5, 24.5, 24.5, 25.5, 26.5, 27.5, 77.5 },
  { 31.5, 26.5, 34.5, 29.5, 29.5, 28.5, 22.5, 26.5, 25.5, 26.5, 26.5, 27.5, 28.5, 30.5, 28.5, 77.5 }
};

// peak position for trig type 1-6, for runs 4102-4140 only (20230203 data set), bit 3,5,6 are not available
double kSlot7PeakPos_0201[][16] = {
  { 50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 49.5, 68.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5 },
  { 46.5, 45.5, 46.5, 46.5, 45.5, 45.5, 45.5, 68.5, 45.5, 45.5, 45.5, 45.5, 46.5, 46.5, 46.5, 45.5 },
  { 47.5, 47.5, 47.5, 47.5, 47.5, 46.5, 46.5, 68.5, 47.5, 47.5, 46.5, 47.5, 47.5, 47.5, 47.5, 47.5 },
  { 54.5, 54.5, 54.5, 54.5, 54.5, 53.5, 53.5, 68.5, 54.5, 54.5, 54.5, 54.5, 54.5, 54.5, 54.5, 54.5 },
  { 49.5, 49.5, 49.5, 49.5, 49.5, 49.5, 49.5, 68.5, 49.5, 49.5, 49.5, 49.5, 49.5, 49.5, 49.5, 49.5 },
  { 54.5, 54.5, 54.5, 54.5, 54.5, 53.5, 53.5, 68.5, 54.5, 54.5, 54.5, 54.5, 54.5, 54.5, 54.5, 54.5 }
};
double kSlot8PeakPos_0201[6][16] = {
  { 37.5, 32.5, 40.5, 35.5, 35.5, 34.5, 28.5, 32.5, 31.5, 32.5, 33.5, 33.5, 33.5, 34.5, 36.5, 98.5 },
  //{ 33.5, 28.5, 33.5, 31.5, 31.5, 30.5, 24.5, 28.5, 27.5, 28.5, 29.5, 26.5, 28.5, 30.5, 31.5, 98.5 },
  //{ 34.5, 29.5, 34.5, 32.5, 32.5, 31.5, 25.5, 29.5, 28.5, 29.5, 30.5, 29.5, 30.5, 31.5, 31.5, 98.5 },
  { 28.5, 28.5, 28.5, 31.5, 28.5, 28.5, 22.5, 27.5, 27.5, 27.5, 28.5, 28.5, 28.5, 30.5, 31.5, 98.5 }, //middle of 2 peaks
  { 28.5, 28.5, 28.5, 31.5, 28.5, 28.5, 22.5, 27.5, 27.5, 27.5, 28.5, 28.5, 28.5, 30.5, 31.5, 98.5 }, //middle of 2 peaks
  { 41.5, 36.5, 44.5, 39.5, 39.5, 38.5, 32.5, 36.5, 35.5, 37.5, 37.5, 37.5, 37.5, 38.5, 39.5, 98.5 },
  { 36.5, 31.5, 36.5, 34.5, 34.5, 33.5, 29.5, 31.5, 31.5, 31.5, 32.5, 32.5, 32.5, 33.5, 33.5, 77.5 },
  { 41.5, 36.5, 44.5, 39.5, 39.5, 38.5, 32.5, 36.5, 35.5, 37.5, 37.5, 37.5, 37.5, 38.5, 39.5, 98.5 }
};

// peak position for trig type 1-6, for runs 4141-4216 only (20230210 data set), bit 6 are not available
double kSlot7PeakPos_0210[][16] = {
  { 50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 68.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5, 50.5 },
  { 46.5, 46.5, 46.5, 46.5, 46.5, 45.5, 45.5, 68.5, 46.5, 45.5, 45.5, 46.5, 46.5, 46.5, 46.5, 46.5 },
  { 47.5, 47.5, 47.5, 47.5, 47.5, 46.5, 46.5, 68.5, 47.5, 47.5, 46.5, 47.5, 47.5, 47.5, 47.5, 47.5 },
  { 54.5, 54.5, 55.5, 54.5, 54.5, 53.5, 53.5, 68.5, 54.5, 54.5, 53.5, 54.5, 54.5, 54.5, 53.5, 54.5 },
  { 49.5, 49.5, 49.5, 49.5, 49.5, 49.5, 49.5, 68.5, 49.5, 49.5, 49.5, 49.5, 49.5, 49.5, 49.5, 49.5 },
  { 54.5, 54.5, 54.5, 54.5, 54.5, 53.5, 53.5, 68.5, 54.5, 54.5, 54.5, 54.5, 54.5, 54.5, 54.5, 54.5 }
};
double kSlot8PeakPos_0210[6][16] = {
  { 37.5, 32.5, 37.5, 35.5, 35.5, 34.5, 29.5, 32.5, 32.5, 32.5, 33.5, 33.5, 33.5, 34.5, 34.5, 98.5 },
  { 28.5, 28.5, 28.5, 31.5, 28.5, 28.5, 22.5, 27.5, 27.5, 27.5, 28.5, 28.5, 28.5, 30.5, 31.5, 77.5 }, //middle of 2 peaks
  { 28.5, 28.5, 28.5, 31.5, 28.5, 28.5, 22.5, 27.5, 27.5, 27.5, 28.5, 28.5, 28.5, 30.5, 31.5, 98.5 }, //middle of 2 peaks
  { 41.5, 36.5, 42.5, 39.5, 39.5, 38.5, 32.5, 36.5, 36.5, 36.5, 37.5, 37.5, 37.5, 38.5, 38.5, 98.5 },
  { 36.5, 31.5, 36.5, 34.5, 34.5, 33.5, 29.5, 31.5, 31.5, 31.5, 32.5, 32.5, 32.5, 33.5, 33.5, 77.5 },
  { 41.5, 36.5, 44.5, 39.5, 39.5, 38.5, 32.5, 36.5, 35.5, 37.5, 37.5, 37.5, 37.5, 38.5, 39.5, 98.5 }
};

// peak position for trig type 1-6, for runs 4217-42xx only (20230210 data set), bit 5,6 are not available
double kSlot7PeakPos_0217[][16] = {
  { 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 78.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5, 40.5 },
  { 36.5, 36.5, 36.5, 36.5, 36.5, 35.5, 35.5, 78.5, 36.5, 36.5, 36.5, 36.5, 36.5, 36.5, 36.5, 36.5 },
  { 37.5, 37.5, 37.5, 37.5, 37.5, 36.5, 36.5, 78.5, 37.5, 37.5, 36.5, 37.5, 37.5, 37.5, 37.5, 37.5 },
  { 44.5, 43.5, 44.5, 44.5, 43.5, 43.5, 43.5, 78.5, 43.5, 43.5, 43.5, 43.5, 43.5, 43.5, 43.5, 43.5 },
  { 39.5, 39.5, 39.5, 39.5, 39.5, 39.5, 39.5, 78.5, 39.5, 39.5, 39.5, 39.5, 39.5, 39.5, 39.5, 39.5 },
  { 44.5, 43.5, 44.5, 44.5, 43.5, 43.5, 43.5, 78.5, 43.5, 43.5, 43.5, 43.5, 43.5, 43.5, 43.5, 43.5 }
};
double kSlot8PeakPos_0217[6][16] = {
  { 37.5, 32.5, 38.5, 36.5, 35.5, 34.5, 29.5, 32.5, 32.5, 32.5, 33.5, 33.5, 33.5, 34.5, 34.5, 77.5 },
  { 28.5, 28.5, 28.5, 28.5, 28.5, 28.5, 22.5, 28.5, 28.5, 28.5, 29.5, 29.5, 29.5, 30.5, 31.5, 77.5 }, //middle of 2 peaks
  { 28.5, 28.5, 28.5, 28.5, 28.5, 28.5, 22.5, 28.5, 28.5, 28.5, 29.5, 29.5, 29.5, 30.5, 31.5, 77.5 }, //middle of 2 peaks
  { 40.5, 35.5, 41.5, 39.5, 38.5, 37.5, 31.5, 35.5, 35.5, 36.5, 37.5, 37.5, 37.5, 37.5, 38.5, 77.5 },
  { 36.5, 31.5, 36.5, 34.5, 34.5, 33.5, 29.5, 31.5, 31.5, 31.5, 32.5, 32.5, 32.5, 33.5, 33.5, 77.5 },
  { 40.5, 35.5, 41.5, 39.5, 38.5, 37.5, 31.5, 35.5, 35.5, 36.5, 37.5, 37.5, 37.5, 37.5, 38.5, 77.5  }
};

void Clone1DArray(double src[16], double target[16]) 
{   
    for(int j=0;j<16;j++) {target[j]=src[j];}
}

void Clone2DArray(double src[6][16], double target[6][16]) 
{
  for(int i=0;i<6;i++) {      
    for(int j=0;j<16;j++) {target[i][j]=src[i][j];}
  }
}

void GetPed(int run, int verbose_level=1) 
{
  if(run<=4022) {
    //need to work on this part
    Clone1DArray(kPed7_0112, gPed7); Clone1DArray(kPed8_0112, gPed8);
  } else if(run>=4023 && run<=4066) {
    Clone1DArray(kPed7_0120, gPed7); Clone1DArray(kPed8_0120, gPed8);
  } else if (run>=4067 && run<=4101) {
    Clone1DArray(kPed7_0127, gPed7); Clone1DArray(kPed8_0127, gPed8);
  } else if (run>=4102 && run<=4126) {
    Clone1DArray(kPed7_0201, gPed7); Clone1DArray(kPed8_0201, gPed8);
  } else if (run>=4127 && run<=4140) {
    Clone1DArray(kPed7_0208, gPed7); Clone1DArray(kPed8_0208, gPed8);
  } else if (run>=4141 && run<=4171){
    Clone1DArray(kPed7_0210, gPed7); Clone1DArray(kPed8_0210, gPed8);
  } else if (run>=4172 && run<=4216){
    Clone1DArray(kPed7_0214, gPed7); Clone1DArray(kPed8_0214, gPed8);
  } else if (run>=4217 && run<=14216){
    //need to work on this part
    Clone1DArray(kPed7_0214, gPed7); Clone1DArray(kPed8_0214, gPed8);
  }
  
  if(verbose_level) {
    cout<<"gPed7[] = { "<< gPed7[0];
    for (int i=1;i<16;i++) cout<<", "<<gPed7[i];
    cout<<"}; \n";  
    cout<<"gPed8[] = { "<< gPed8[0];
    for (int i=1;i<16;i++) cout<<", "<<gPed8[i];
    cout<<"}; \n";
  }
}

void GetPedNPeakPos(int run, double peak7[6][16], double peak8[6][16], int verbose_level=1) 
{
  GetPed(run,verbose_level);
  
  if(run<=4022) {
    //need to work on this part
    Clone2DArray(kSlot7PeakPos_0112, peak7);
    Clone2DArray(kSlot8PeakPos_0112, peak8);
  } else if(run>=4023 && run<=4066) {
    Clone2DArray(kSlot7PeakPos_0120, peak7);
    Clone2DArray(kSlot8PeakPos_0120, peak8);     
  } else if (run>=4067 && run<=4101) {
    Clone2DArray(kSlot7PeakPos_0127, peak7);
    Clone2DArray(kSlot8PeakPos_0127, peak8);
  } else if (run>=4102 && run<=4140) {
    Clone2DArray(kSlot7PeakPos_0201, peak7);
    Clone2DArray(kSlot8PeakPos_0201, peak8);
  } else if (run>=4141 && run<=4216) {
    Clone2DArray(kSlot7PeakPos_0210, peak7);
    Clone2DArray(kSlot8PeakPos_0210, peak8);
  } else if (run>=4217 && run<=14216) {
    //need to work on this part
    Clone2DArray(kSlot7PeakPos_0217, peak7);
    Clone2DArray(kSlot8PeakPos_0217, peak8);
  }
  
  if(verbose_level) {
    cout<<"gSlot7PeakPos_4[] = { "<< peak7[4][0];
    for (int i=1;i<16;i++) cout<<", "<<peak7[4][i];
    cout<<"}; \n";
    cout<<"gSlot8PeakPos_4[] = { "<< peak8[4][0];
    for (int i=1;i<16;i++) cout<<", "<<peak8[4][i];
    cout<<"}; \n";
  }
}

#endif //_PedNPeak_h_
